/// <reference types="jquery" />
import "../scss/OnOffSwitch.scss";
export interface IOnOffSwitchParams {
    el: JQuery<HTMLElement>;
    textOn: string;
    textOff: string;
    width?: number;
    height?: number;
    trackBorderWidth?: number;
    trackColorOn?: string;
    trackColorOff?: string;
    textColorOn?: string;
    textColorOff?: string;
    trackBorderColor?: string;
    textSizeRatio?: number;
    listener: (name: string, checked: boolean) => void;
}
export declare class OnOffSwitch {
    private static switches;
    private inputEl;
    private el;
    private track;
    private thumb;
    private thumbColor;
    private trackOff;
    private onTextEl;
    private onOffTrackContainer;
    private trackOn;
    private offTextEl;
    private name;
    private checked;
    private isCheckbox;
    private innerTrackWidth;
    private params;
    private maxX;
    private borderSize;
    private minX;
    constructor(params: IOnOffSwitchParams);
    private width;
    private readonly trackBorderWidth;
    private readonly height;
    private readonly trackBorderColor;
    private readonly textColorOff;
    private readonly textColorOn;
    private readonly textSizeRatio;
    private readonly trackColorOff;
    private readonly trackColorOn;
    private render;
    private addEvents;
    private listenToClickEvent;
    private enterThumb;
    leaveThumb(): void;
    renderTrack(): void;
    private styleText;
    renderThumb(): void;
    getBorderSize(): number;
    private applyStyles;
    private isDragging;
    hasBeenDragged: boolean;
    private startCoordinates;
    private startDragging;
    private drag;
    private dragCurrentX;
    private getX;
    endDrag(): boolean;
    getTrackPosUnchecked(): number;
    animateLeft(): void;
    private animateRight;
    check(): void;
    uncheck(): void;
    toggle(): void;
    notifyListeners(): void;
    getValue(): boolean;
}
